{"version":3,"file":"Series.astro_astro_type_script_index_0_lang.D6KJQTaM.js","sources":["../../src/layouts/Series.astro?astro&type=script&index=0&lang.ts"],"sourcesContent":["\tconst scrollBtn = document.getElementById(\"to-top-button\") as HTMLButtonElement;\n\tconst targetHeader = document.querySelector(\"header\") as HTMLElement;\n\n\tfunction callback(entries: IntersectionObserverEntry[]) {\n\t\tentries.forEach((entry) => {\n\t\t\t// Show the scroll to top button when the <header> is out of view\n\t\t\tscrollBtn.dataset.show = (!entry.isIntersecting).toString();\n\t\t});\n\t}\n\n\tscrollBtn.addEventListener(\"click\", () => {\n\t\tdocument.documentElement.scrollTo({ behavior: \"smooth\", top: 0 });\n\t});\n\n\tconst observer = new IntersectionObserver(callback);\n\tobserver.observe(targetHeader);\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,"],"names":["scrollBtn","targetHeader","callback","entries","entry","observer"],"mappings":"AA0RC,MAAMA,EAAY,SAAS,eAAe,eAAe,EACnDC,EAAe,SAAS,cAAc,QAAQ,EAEpD,SAASC,EAASC,EAAsC,CAC/CA,EAAA,QAASC,GAAU,CAE1BJ,EAAU,QAAQ,MAAQ,CAACI,EAAM,gBAAgB,SAAS,EAC1D,CACF,CAEAJ,EAAU,iBAAiB,QAAS,IAAM,CACzC,SAAS,gBAAgB,SAAS,CAAE,SAAU,SAAU,IAAK,EAAG,CACjE,CAAC,EAED,MAAMK,EAAW,IAAI,qBAAqBH,CAAQ,EAClDG,EAAS,QAAQJ,CAAY"}