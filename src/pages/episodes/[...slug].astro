---
import Layout from "../../layouts/Layout.astro";
import { getEntry, getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
import Hero from "../../components/Hero.astro";
import "../../styles/blogStyles.css";
import SEO from "../../components/SEO.astro";

const slug = Array.isArray(Astro.params.slug)
  ? Astro.params.slug.join("/")
  : Astro.params.slug;

const episode = await getEntry("episodes", slug);

if (!episode) {
  throw new Error(`Episode not found for slug: ${slug}`);
}

const { Content } = await episode.render();

export async function getStaticPaths() {
  const posts = (await getCollection(
    "episodes"
  )) as CollectionEntry<"episodes">[];

  return posts.map((post) => ({
    params: {
      slug: post.slug, // ‚Üê MUST be a string!
    },
  }));
}
---

<Layout>
  <head slot="head">
    <SEO
      title={episode.data.title}
      description={episode.data.description}
      image={episode.data.image}
      pubDate={episode.data.pubDate}
      canonicalUrl={`/episodes/${episode.slug}`}
    />
  </head>
  <main>
    <Hero title={episode.data.title} background={episode.data.image} />
    <div class="content-container-blog">
      <div class="rich-content">
        <h1 class="post-title">{episode.data.title}</h1>
        <p class="date-published">
          {episode.data.pubDate.toLocaleDateString()}
        </p>

        <article>
          <Content />
        </article>
      </div>
    </div>
  </main>
</Layout>
