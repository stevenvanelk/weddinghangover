---
import Layout from "../../layouts/Layout.astro";
import { getEntry, getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
import Hero from "../../components/Hero.astro";
import SEO from "../../components/SEO.astro";
import { slugify } from "../../utils/slugify";

const slug = Array.isArray(Astro.params.slug)
  ? Astro.params.slug.join("/")
  : Astro.params.slug;

const post = await getEntry("blog", slug);

if (!post) {
  throw new Error(`Blog post not found for slug: ${slug}`);
}

const { Content } = await post.render();

export async function getStaticPaths() {
  const posts = (await getCollection("blog")) as CollectionEntry<"blog">[];

  return posts.map((post) => ({
    params: {
      slug: post.slug, // MUST be a string!
    },
  }));
}
const allPosts = (await getCollection("blog")) as CollectionEntry<"blog">[];

// Sort posts by date descending (newest first)
allPosts.sort((a, b) => new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime());

// Find the index of the current post
const currentIndex = allPosts.findIndex((p) => p.slug === post.slug);

const newerPost = allPosts[currentIndex - 1]; // Newer post (earlier in the list)
const olderPost = allPosts[currentIndex + 1]; // Older post (later in the list)

---

<Layout>
  <Fragment slot="head">
    <SEO
      title={post.data.title}
      description={post.data.description}
      image={post.data.image}
      pubDate={post.data.pubDate}
      canonicalUrl={`/blog/${post.slug}`}
    />
    <link rel="stylesheet" href="/css/blogStyles.css" />
  </Fragment>
  <main>
    <Hero title={post.data.title} background={post.data.image} />
    <div class="content-container-blog">
      <div class="rich-content">
        <h1 class="post-title">{post.data.title}</h1>
        <p class="date-published">{post.data.pubDate.toLocaleDateString()}</p>
        <article>
          <Content />
        </article>
        {post.data.tags && post.data.tags.length > 0 && (
          <div class="post-tags">
            <h3>Tags:</h3>
            <div class="tag-list">
              {post.data.tags.map((tag: string) => (
                <a href={`/tags/${slugify(tag)}/`} rel="tag">#{tag}</a>
              ))}
            </div>
          </div>
        )}
        <nav class="post-navigation">
          <div class="nav-col">
            {newerPost && (
              <a href={`/blog/${newerPost.slug}`} class="nav-link newer">
                <span class="nav-label">← Newer Post</span>
                <span class="nav-title">{newerPost.data.title}</span>
              </a>
            )}
          </div>
          <div class="nav-col">
            {olderPost && (
              <a href={`/blog/${olderPost.slug}`} class="nav-link older">
                <span class="nav-label">Older Post →</span>
                <span class="nav-title">{olderPost.data.title}</span>
              </a>
            )}
          </div>
        </nav>
      </div>
    </div>
  </main>
</Layout>
